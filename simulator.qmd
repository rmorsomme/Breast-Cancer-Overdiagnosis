---
title: "simulator"
format: html
editor_options: 
  chunk_output_type: console
---

```{r}
library(tidyverse)
```

```{r}
theta <- list(
  rate_H = 3.5e-6, shape_H = 4,
  rate_P = 0.0015, shape_P = 4,
  beta   = 0.814, psy     = 0.045
)

prior <- list(
  rate_H = 1, shape_H = 1, # gamma(shape_H, rate_H) prior on Weibull rate for H
  rate_P = 1, shape_P = 1, # gamma(shape_P, rate_P) prior on Weibull rate for P
  a_psy  = 1, b_psy   = 1, # beta(a_psy, b_psy) prior on beta
  a_beta = 1, b_beta  = 1  # beta(a_beta, b_beta) prior on psy
)

age_start <- 40

ages_screen <- seq(age_start, 150, by = 2)
n_screen <- length(ages_screen)

n <- 1e2
d_process <- tibble(
  person_id = numeric(n), age_start = numeric(n), 
  sojourn_H = numeric(n), tau_HP    = numeric(n),
  indolent  = numeric(n),
  sojourn_P = numeric(n), tau_PC    = numeric(n)
  )
d_obs_screen <- tibble(
  person_id  = numeric(), screen_id       = numeric(), 
  age_screen = numeric(), screen_detected = numeric()
)
d_obs_clinical <- tibble(
  person_id = numeric(n), clinical_detected = logical(n), tau_PC_obs = numeric(n)
  )
```

## Biological process

```{r}
for(i in 1 : n){ # person i
  
  set.seed(i)
  
  # Process
  sojourn_H <- draw_sojourn_H(theta)
  tau_HP    <- age_start + sojourn_H
  indolent  <- rbernoulli(1, theta$psy)
  sojourn_P <- if(!indolent) { draw_sojourn_P(theta) } else { Inf }
  tau_PC    <- tau_HP    + sojourn_P
  
  d_process[i, ] <- tibble(
    i, age_start, sojourn_H, tau_HP, indolent, sojourn_P, tau_PC
    )
}
```

```{r}
# Does Marc find this acceptable?
hist(d_process$tau_HP   , breaks = 100, main = "Healthy to preclinical", xlab = "Age") # peak at 60-65 (median age onset is 62)
hist(d_process$sojourn_P, breaks = 100, main = "Sojourn time in preclinical", xlab = "Waiting time") # peak at 4-6 years
```

## Observation process -- screens and clinical

```{r}
for(i in 1 : n){  print(i) # person i
  
  set.seed(-i)
  
  tau_HP <- d_process$tau_HP[i]
  tau_PC <- d_process$tau_PC[i]
  
  for(j in 1 : length(ages_screen)){ # screen j
    
    age_screen <- ages_screen[j]
  
    if(tau_PC < age_screen){
      d_obs_clinical[i, ] <- tibble(i, TRUE, tau_PC)
      break
    }
  
    compartment     <- compute_compartment(age_screen, tau_HP, tau_PC)
    screen_detected <- screen_result(compartment, theta)
    
    d_obs_screen    <- d_obs_screen %>% 
      add_row(
        person_id = i, screen_id = j,
        age_screen = age_screen,
        screen_detected = screen_detected
        )
    
    if(screen_detected){
      d_obs_clinical[i, ] <- tibble(i, FALSE, NA)
      break
    }
    
  }
  
}
```

```{r}
d_process
d_obs_screen
d_obs_clinical
```

```{r}
which(d_obs_clinical$clinical_detected)
id <- 12 # 11 15 18 22 84 86
d_process %>% filter(person_id == id)
d_obs_screen %>% filter(person_id == id)
d_obs_clinical %>% filter(person_id == id)
```

## Inference

```{r}
dlog_sojourn_H <- function(sojourn_H, theta){
  dweibull2(
    sojourn_H, 
    shape = theta$shape_H, rate = theta$rate_H,
    log = TRUE
    ) %>%
    sum()
}

dlog_sojourn_H <- function(sojourn_H, theta){
  dweibull2(
    sojourn_H, 
    shape = theta$shape_H, rate = theta$rate_H, 
    log = TRUE
    ) %>%
    sum()
}

dlog_psy <- function(indolent, theta){
  dbinom(
    sum(indolent), length(indolent), 
    prob = theta$psy, log = TRUE
    )
}

dlog_beta <- function(d_obs_screen, theta, tau_HP, tau_PC){
  
  n <- length(tau_HP)
  n_screen <- 0
  
  
  for(i in 1 : n){
    d_obs_screen_i <- d_obs_screen %>% filter(person_id == i)
    age_screen_i   <- d_obs_screen_i$age_screen
    n_screen_i     <- sum(between(age_screen_i, tau_HP[i], tau_PC[i]))
  
    n_screen <- n_screen + n_screen_i
  }
  
  n_screen_detected <- sum(d_obs_screen$screen_detected)
  
  dbinom(
    n_screen_detected, n_screen, 
    prob = theta$beta, log = TRUE
    )
}
```

```{r}
psy_range <- seq(0.01, 0.2, length.out = 200)
m <- length(psy_range)
dlog <- numeric(m)
theta_temp <- theta

for(k in 1 : m){
  theta_temp[["psy"]] <- psy_range[k]
  dlog[k] <- dlog_psy(d_process$indolent, theta_temp)
}

plot(psy_range, dlog, type = "l"); abline(v = theta$psy, col = "red")
```

```{r}
beta_range <- seq(0.6, 0.9, length.out = 25)
m <- length(beta_range)
dlog <- numeric(m)
theta_temp <- theta

for(k in 1 : m){
  print(k)
  theta_temp[["beta"]] <- beta_range[k]
  dlog[k] <- dlog_beta(d_obs_screen, theta_temp, d_process$tau_HP, d_process$tau_PC)
}

plot(beta_range, dlog, type = "l"); abline(v = theta$beta, col = "red")
```

```{r}

```

```{r}
compute_loglik_process <- function(d_process, theta){
  
  
  
  
  loglik_H <- d_process %>%
    mutate(
      sojourn_H = tau_HP - age_start,
      loglik_H = dexp(sojourn_H, rate = theta$rate_H, log = TRUE),
      ) %>%
    pull(loglik_H) %>%
    sum()
  
  loglik_P <- d_process %>%
    filter(is.finite(tau_PC)) %>%
    mutate(
      sojourn_P = tau_PC - tau_HP,
      loglik_P = dexp(sojourn_P, rate = theta$rate_P, log = TRUE),
      ) %>%
    pull(loglik_P) %>%
    sum()
  
  loglik_H + loglik_P
  
}
compute_loglik_process(d_process, theta)

rates  <- seq(0.01, 0.5, by = 0.01)
m      <- length(rates)
loglik <- numeric(m)
for(i in 1 : m){
  rate      <- rates[i]
  loglik[i] <- compute_loglik_process(d_process, list(rate_H = rate, rate_P = 0.1))
}
tibble(rates, loglik) %>%
  ggplot() + 
  geom_line(aes(x = rates, y = loglik))

for(i in 1 : m){
  rate      <- rates[i]
  loglik[i] <- compute_loglik_process(d_process, list(rate_H = 0.1, rate_P = rate))
}
tibble(rates, loglik) %>%
  ggplot() + 
  geom_line(aes(x = rates, y = loglik))
```

```{r}
compute_loglik_emission <- function(d_emission, theta){
  
  d_emission %>%
    filter(compartment == "P") %>%
    pull(output) %>%
    dbinom(size = 1, prob = theta$beta, log = TRUE) %>%
    sum()
  
}
compute_loglik_emission(d_emission, theta)

probs  <- seq(0.5, 0.999, by = 0.01)
m      <- length(probs)
loglik <- numeric(m)
for(i in 1 : m){
  prob      <- probs[i]
  loglik[i] <- compute_loglik_emission(d_emission, list(beta = prob))
}
tibble(probs, loglik)  %>%
  ggplot() + 
  geom_line(aes(x = probs, y = loglik))
```
